
<style>
  .auth_view_true {
      transition: all 0.3s ease-in-out;
    }
    .auth_view_true.expanded {
      transform: scale(1.05);
      z-index: 1;
    }
    .close-button {
      position: absolute;
      top: 10px;
      right: 10px;
      display: none;
    }
    </style>

<% if (typeof sectionSettings === 'object' && sectionSettings && sectionSettings.length > 0) { %>
  
  <div class="auth_view_true" style="background-image: url('./images/span1.png');">
    <div class="index-container">
      <h1>Shop Now!!</h1>
      <button class="collapsible">View Products<span class="carrot">&#9654;</span></button>
      <div class="content" data-url="/shopify-storefront/products"></div>
    </div>
  </div>
  <% sectionSettings.forEach(function(setting) { %>
    <% if (setting.visible && setting.auth_view) { %>
      <div class="auth_view_true" style="background-image: url('<%= setting.backgroundImg %>');">
        <div class="index-container">
          <h1><%= setting.title %></h1>
          <h1><%= setting.subtitle %></h1>
          <p><%= setting.description %></p>
          <button style="background-image: url('<%=setting.entryBackground%>');" class="collapsible"><%= setting.entryButton.text %><span class="carrot"></span></button>
          <div class="content" data-url="<%= setting.entryButton.url %>"></div>
        </div>
      </div>
      <% } %>
      <% }); %>
      
      <div class="auth_view_true" style="background-image: url('./images/span1.png');">
        <div class="index-container">
          <h1>The Parlor</h1>
          <div><p>Set up your parlor space below.</p></div>
    
          <div class="container-scrollbox-x">
            <%-include('../videoChannels/userStream')%>
          <%- include('../videoChannels/channel_1')%>
        </div>
        <div class="marquee">
          <span id="marquee-text"></span>
        </div>
        </div>
      </div>
      <script>
        document.addEventListener('DOMContentLoaded', () => {
          document.querySelectorAll('.auth_view_true').forEach(div => {
            div.addEventListener('click', function () {
              if (!this.classList.contains('expanded')) {
                this.classList.add('expanded');
              let closeButton = this.querySelector('.close-button');
              if (!closeButton) {
                closeButton = document.createElement('button');
                closeButton.className = 'close-button';
                closeButton.innerHTML = 'X';
                this.appendChild(closeButton);
              }
              closeButton.style.display = 'block'; // Ensure the close button is visible

              closeButton.addEventListener('click', function (e) {
                e.stopPropagation(); // Prevent click from propagating to the div
                this.parentNode.classList.remove('expanded');
                this.style.display = 'none'; // Hide button after collapsing
              });
            }
          });
        });
      });
    </script>

  <% } %>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    window.onload = () => {
      const scrollContainerX = document.querySelector('.container-scrollbox-x');
      if (scrollContainerX) {
        scrollContainerX.scrollLeft = (scrollContainerX.scrollWidth - scrollContainerX.clientWidth) / 2;
      }
    };
  </script>
  

