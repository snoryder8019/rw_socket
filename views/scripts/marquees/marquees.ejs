<script>
    let marqueeArray = [];
    
    document.addEventListener('DOMContentLoaded', () => {
        // Fetch marquee data from the server
        fetchMarquees().then(() => {
            // Start the marquee display after fetching data
            renderMarquees();
        });
    });
    
    // Function to fetch marquees from the server
    async function fetchMarquees() {
        try {
            const response = await fetch('/marquees/allData');
            const data = await response.json();
            // Filter and push active marquees to marqueeArray
            const activeItems = data.filter(item => item.active === true);
            marqueeArray.push(...activeItems);
        } catch (error) {
            console.error('Error fetching marquees:', error);
        }
    }
    
    // Function to render marquees with smooth scroll and push-pop effect
    function renderMarquees() {
        let index = 0;
    
        function displayNextMarquee() {
            if (index >= marqueeArray.length) {
                index = 0; // Reset to the first marquee
            }
    
            const marquee = marqueeArray[index];
            // Render marquee with animation if there's any content to show
            if (marquee) {
                animateMarquee(marquee);
            }
    
            index++;
    
            // Set timeout for the next marquee with reduced initiation length
            setTimeout(displayNextMarquee, 8000); // Shorter interval for next display
        }
    
        // Start the display cycle
        displayNextMarquee();
    }
    
    // Function to animate the marquee display
    function animateMarquee(marquee) {
        const marqueeContainer = document.getElementById('marquee');
        if (!marqueeContainer) return;
    
        // Create a marquee item element
        const marqueeItem = document.createElement('div');
        marqueeItem.className = 'marquee-item';
        marqueeItem.style.position = 'absolute';
        marqueeItem.style.whiteSpace = 'nowrap';
        marqueeItem.style.transform = 'translateX(150%)'; // Start outside of view
        marqueeItem.style.transition = 'transform 8s linear'; // Faster scroll effect
    
        // Add title and description if they exist
        let contentHTML = `
            <h3>${marquee.title || ''}</h3>
            <p>${marquee.description || ''}</p>
        `;
    
        // Check for mediumIcon, and add it if it exists
        if (marquee.mediumIcon) {
            contentHTML += `<img src="${marquee.mediumIcon}" alt="${marquee.title}" style="width: 20%; height: auto;">`;
        }
        // Check for horizBkgd and add it if mediumIcon is missing
        else if (marquee.horizBkgd) {
            contentHTML += `<img src="${marquee.horizBkgd}" alt="${marquee.title}" style="width: 20%; height: auto;">`;
        }
        // Check for backgroundImg and add it if both mediumIcon and horizBkgd are missing
        else if (marquee.backgroundImg) {
            contentHTML += `<img src="${marquee.backgroundImg}" alt="${marquee.title}" style="width: 20%; height: auto;">`;
        }
    
        // Check for a link and add it if it exists
        if (marquee.linkUrl) {
            contentHTML += `<a href="${marquee.linkUrl}"><h3>Learn more</h3></a>`;
        }
    
        // Set the innerHTML for the marqueeItem
        marqueeItem.innerHTML = contentHTML;
    
        // Append the marquee item to the container
        marqueeContainer.appendChild(marqueeItem);
    
        // Trigger the animation after appending
        requestAnimationFrame(() => {
            marqueeItem.style.transform = 'translateX(-200%)'; // Move into view and scroll out
        });
    
        // Remove the item smoothly after it's fully visible and wait for it to disappear
        setTimeout(() => {
            marqueeContainer.removeChild(marqueeItem); // Clean up after animation
        }, 8000); // Time to match the transition duration
    }
    </script>
    