<!--ejs partial no head or body here-->

<!--views/videoChannels/channel_1.ejs-->
<!--This is where the overlay goes, the connected client should automatically receive the played video here-->
<div class="">
<div class="client_window">
  <div class="myVideo">
  <h2 id="statusText">ðŸ“º  New videos here daily!</h2>
</div>
</div>
<div style="color:red" id="marqueeContainer">
  <marquee id="marqueeText" behavior="scroll" direction="left" style="display: none;"></marquee>
</div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const socket = io('/main_chat');

  socket.on('connect', () => {
    console.log('Connected to channel_1 client');
  });

  socket.on('connect_error', (err) => {
    console.error('Connection error:', err);
  });

  socket.on('broadcast', (videoUrl) => {
    const finUrl = videoUrl.videoUrl.videoUrl;
    console.log(`CHANNEL ONE BROADCAST NOTICED url: ${finUrl}`);
    const containerVid = document.querySelector('.myVideo');
    const statusText = document.getElementById('statusText');
    
    // Hide the "New videos here daily!" text
    statusText.style.display = 'none';
    
    // Stop and remove the existing video if it exists
    let existingVideo = document.getElementById('videoPlayer');
    if (existingVideo) {
      existingVideo.pause(); // Stop the video
      existingVideo.src = ''; // Clear the source
      existingVideo.load(); // Stop downloading the video
      existingVideo.remove(); // Remove the video element from the DOM
    }
    
    // Create a new video element and add it to the container
    const videoPlayer = document.createElement('video');
    videoPlayer.id = 'videoPlayer';
    videoPlayer.autoplay = true;
    videoPlayer.muted = true;
    videoPlayer.controls = true;
    videoPlayer.style.maxHeight = '200px';
    videoPlayer.style.width = '100%';

    const sourceElement = document.createElement('source');
    sourceElement.src = `https://${finUrl}`;
    sourceElement.type = 'video/mp4';

    videoPlayer.appendChild(sourceElement);
    containerVid.appendChild(videoPlayer);
    
    // Load and play the new video
    videoPlayer.load();
    videoPlayer.play();
  });

  socket.on('marquee', (data) => {
    console.log('Received marquee message:', data.message);
    const marqueeText = document.getElementById('marqueeText');
    marqueeText.innerText = data.message;
    marqueeText.style.display = 'block'; // Show the marquee
  });
  
  document.addEventListener('click', (event) => {
    if(event.target.classList.contains('play-video')){
      const videoUrl = event.target.getAttribute('data-video');
      console.log(`playVIDDDSS!!k ${videoUrl}`);
      socket.emit('broadcast', { videoUrl: videoUrl });
    }
  });

  document.addEventListener('click', (event) => {
    if (event.target.classList.contains('marqueeButton')) {
      const marqueeMessage = document.getElementById('marqueeMessage').value;
      console.log('Button clicked', marqueeMessage);
      socket.emit('marquee', { message: marqueeMessage });
      console.log('Marquee event emitted');
    }
  });
});


</script>
