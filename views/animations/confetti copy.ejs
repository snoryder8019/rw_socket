<%if(typeof user ==='object' && user.isAdmin){%>
<div id="confettiControls">
    <div>
      <label for="confetti-color">Color:</label>
      <input type="color" id="confetti-color" value="#ff0000">
      <label for="confetti-size">Size:</label>
      <input type="range" id="confetti-size" min="5" max="20" value="9">
      <label for="confetti-shape">Shape:</label>
      <select id="confetti-shape">
        <option value="circle">Circle</option>
        <option value="square">Square</option>
      </select>
      <button id="startButton">Start Confetti</button>
    </div>
  </div>
  <%}%>
  <canvas id="confettiCanvas"></canvas>
  <script>
  class ConfettiParticle {
      constructor(context, width, height, color, size, shape) {
          this.context = context;
          this.width = width;
          this.height = height;
          this.color = color; // Use specific color
          this.x = Math.random() * width;
          this.y = Math.random() * height - height;
          this.diameter = size; // Use specific size
          this.shape = shape; // Use specific shape
          this.tilt = 0;
          this.tiltAngleIncremental = Math.random() * 0.07 + 0.05;
          this.tiltAngle = 0;
          this.spinAngle = Math.random() * Math.PI;
          this.spinSpeed = Math.random() * 0.2 + 0.1;
      }
  
      update(color, size) {
          this.color = color; // Update color based on control
          this.diameter = size; // Update size based on control
          this.spinAngle += this.spinSpeed;
          this.y += Math.cos(this.tiltAngle) + 1 + this.diameter / 2;
          this.tiltAngle += this.tiltAngleIncremental;
          if (this.y > this.height) {
              this.reset();
          }
      }
  
      reset() {
          this.x = Math.random() * this.width;
          this.y = 0 - this.diameter;
          this.spinAngle = Math.random() * Math.PI;
      }
  
      draw() {
          const size = this.diameter;
          const x1 = this.x + this.tilt;
          const y1 = this.y;
          
          this.context.beginPath();
          if (this.shape === "circle") {
              this.context.arc(x1, y1, size / 2, 0, 2 * Math.PI);
          } else { // default to square if not circle
              this.context.rect(x1 - size / 2, y1 - size / 2, size, size);
          }
          this.context.closePath();
          this.context.fillStyle = this.color;
          this.context.fill();
      }
  }
  
  let animationFrameId;
  function runConfetti() {
      const canvas = document.getElementById('confettiCanvas');
      const context = canvas.getContext('2d');
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
  
      const colorInput = document.getElementById('confetti-color');
      const sizeInput = document.getElementById('confetti-size');
      const shapeSelect = document.getElementById('confetti-shape');
  
      const particles = [];
      const numberOfParticles = 200;
      for (let i = 0; i < numberOfParticles; i++) {
          particles.push(new ConfettiParticle(context, canvas.width, canvas.height, colorInput.value, parseFloat(sizeInput.value), shapeSelect.value));
      }
  
      function updateAndDrawParticles() {
          context.clearRect(0, 0, canvas.width, canvas.height);
          particles.forEach(particle => {
              particle.update(colorInput.value, parseFloat(sizeInput.value));
              particle.draw();
          });
          animationFrameId = requestAnimationFrame(updateAndDrawParticles);
      }
  
      cancelAnimationFrame(animationFrameId);
      updateAndDrawParticles();
  }
  
  document.getElementById('startButton').addEventListener('click', runConfetti);
  </script>
  